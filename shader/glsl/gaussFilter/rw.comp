#version 460

layout (local_size_x_id = 0, local_size_y_id = 1) in;

layout (push_constant) uniform PushConstant {
    int kernelSize;
    float sigma2;
} pc;

layout (binding = 0, rgba8) uniform readonly image2D srcImage;
layout (binding = 1, rgba8) uniform writeonly image2D dstImage;

void main() {
    const ivec2 dstIdx = ivec2(gl_GlobalInvocationID.xy);
    const ivec2 dstSize = imageSize(dstImage);
    if (dstIdx.x >= dstSize.x || dstIdx.y >= dstSize.y) {
        return;
    }

    const vec2 invDstSize = 1.0 / vec2(dstSize);
    const int halfKSize = pc.kernelSize / 2;

    vec4 acc = vec4(0.0);
    float accWeight = 0.0;
    for (int y = -halfKSize; y <= halfKSize; y++) {
        for (int x = -halfKSize; x <= halfKSize; x++) {
            const ivec2 offset = ivec2(x, y);
            const ivec2 inCoord = dstIdx + offset;
            const vec4 srcVal = imageLoad(srcImage, inCoord);
            const float weight = exp(-float(dot(offset, offset)) / pc.sigma2);
            acc += srcVal * weight;
            accWeight += weight;
        }
    }
    const vec4 dstVal = acc / accWeight;

    imageStore(dstImage, dstIdx, vec4(dstVal.rgb, 1.0));
}
